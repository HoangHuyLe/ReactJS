{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ReactJS\\\\manage-work_redux\\\\src\\\\components\\\\TaskForm.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions/index';\n\nclass TaskForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.UNSAFE_componentWillMount = () => {\n      if (this.props.itemEditting) {\n        this.setState({\n          id: this.props.itemEditting.id,\n          name: this.props.itemEditting.name,\n          status: this.props.itemEditting.status\n        });\n      } else {\n        this.reset();\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        id: '',\n        name: '',\n        status: true\n      });\n    };\n\n    this.onCloseForm = () => {\n      this.props.onCloseForm();\n    };\n\n    this.onChange = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n\n      if (name === \"status\") {\n        if (value === 'true') {\n          value = true;\n        } else {\n          value = false;\n        }\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSave = () => {\n      data.preventDefault();\n      this.props.onSaveTask(this.state);\n      this.reset();\n    };\n\n    this.state = {\n      id: '',\n      name: '',\n      status: true\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps) {\n      if (!nextProps.itemEditting) {\n        this.setState(this.baseState);\n      } else {\n        this.setState({\n          id: nextProps.itemEditting.id,\n          name: nextProps.itemEditting.name,\n          status: nextProps.itemEditting.status\n        });\n      }\n    }\n  }\n\n  render() {\n    var id = this.state.id;\n    if (!this.props.isDisplayForm) return \"\";\n    return React.createElement(\"div\", {\n      className: \"panel panel-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"panel-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, id === '' ? \"Thêm công việc\" : \"Cập nhật công việc\", React.createElement(\"span\", {\n      onClick: this.onCloseForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-window-close\",\n      style: {\n        float: 'right'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"formTask\",\n      onSave: this.onSave,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"T\\xEAn: \"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"name\",\n      onChange: this.onChange,\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Tr\\u1EA1ng th\\xE1i: \"), React.createElement(\"select\", {\n      name: \"status\",\n      className: \"form-control\",\n      onChange: this.onChange,\n      value: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" K\\xEDch ho\\u1EA1t \"), React.createElement(\"option\", {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \" \\u1EA8n\"))), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"L\\u01B0u l\\u1EA1i\"), \" \\xA0 \\xA0\", React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.reset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"H\\u1EE7y b\\u1ECF\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditting: state.itemEditting\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onSaveTask: task => {\n      dispatch(actions.saveTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\ReactJS\\manage-work_redux\\src\\components\\TaskForm.js"],"names":["React","connect","actions","TaskForm","Component","constructor","props","UNSAFE_componentWillMount","itemEditting","setState","id","name","status","reset","onCloseForm","onChange","event","target","value","onSave","data","preventDefault","onSaveTask","state","UNSAFE_componentWillReceiveProps","nextProps","baseState","render","isDisplayForm","float","mapStateToProps","mapDispatchToProps","dispatch","task","saveTask","closeForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../actions/index'\r\n\r\nclass TaskForm extends React.Component {\r\n\r\n      constructor(props) {\r\n            super(props);\r\n            this.state = {\r\n                  id : '',\r\n                  name: '',\r\n                  status: true\r\n            }\r\n      }\r\n\r\n      UNSAFE_componentWillMount = () => {                        \r\n            if (this.props.itemEditting) {\r\n                  this.setState({\r\n                        id : this.props.itemEditting.id,\r\n                        name : this.props.itemEditting.name,\r\n                        status : this.props.itemEditting.status,\r\n                  })\r\n            }\r\n            else {\r\n                  this.reset();\r\n            }\r\n      }\r\n\r\n      UNSAFE_componentWillReceiveProps(nextProps) {   \r\n            if (nextProps){\r\n                  if(!nextProps.itemEditting){\r\n                        this.setState(this.baseState)\r\n                  } else{\r\n                        this.setState({\r\n                              id : nextProps.itemEditting.id,\r\n                              name : nextProps.itemEditting.name,\r\n                              status : nextProps.itemEditting.status,\r\n                        })\r\n                  }\r\n            }  \r\n      }\r\n\r\n      reset = () => {\r\n            this.setState({\r\n                  id : '',\r\n                  name : '',\r\n                  status : true\r\n            })\r\n      }\r\n\r\n      onCloseForm = () => {\r\n            this.props.onCloseForm();\r\n      }\r\n\r\n      onChange = (event) => {\r\n            let name = event.target.name;\r\n            let value = event.target.value;\r\n            if (name === \"status\") {\r\n\r\n                  if (value === 'true') {\r\n                        value = true\r\n                  } else {\r\n                        value = false\r\n                  }\r\n            }\r\n            this.setState({\r\n                  [name]: value,\r\n            });\r\n      }\r\n\r\n      onSave = () => {\r\n            data.preventDefault();\r\n            this.props.onSaveTask(this.state);\r\n            this.reset();\r\n      }\r\n\r\n      render() {\r\n            var {id} = this.state;            \r\n            if (!this.props.isDisplayForm) return \"\";\r\n            return (\r\n\r\n                  <div className=\"panel panel-danger\">\r\n                        <div className=\"panel-heading\">\r\n\r\n                              <h3 className=\"panel-title\">\r\n                                    {(id === '') ? \"Thêm công việc\" : \"Cập nhật công việc\" }\r\n                                    <span onClick={this.onCloseForm}><i className=\"far fa-window-close\" style={{ float: 'right' }}></i></span>\r\n                              </h3>\r\n\r\n                        </div>\r\n                        <div className=\"panel-body\">\r\n                              <form id=\"formTask\" onSave={this.onSave}>\r\n                                    <div className=\"form-group\">\r\n                                          <label>Tên: </label>\r\n                                          <input\r\n                                                type=\"text\"\r\n                                                className=\"form-control\"\r\n                                                name='name'\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.name}\r\n                                          />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                          <label >Trạng thái: </label>\r\n                                          <select\r\n                                                name=\"status\"\r\n                                                className=\"form-control\"\r\n                                                onChange={this.onChange}\r\n                                                value={this.state.status}\r\n                                          >\r\n                                                <option value={true}> Kích hoạt </option>\r\n                                                <option value={false}> Ẩn</option>\r\n                                          </select>\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                          <button type=\"submit\" className=\"btn btn-primary\">Lưu lại</button> &nbsp; &nbsp;\r\n                                          <button type=\"button\" className=\"btn btn-primary\" onClick={this.reset}>Hủy bỏ</button>\r\n                                    </div>\r\n                              </form>\r\n                        </div>\r\n                  </div>\r\n\r\n            )\r\n      }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n      return {\r\n            isDisplayForm : state.isDisplayForm,\r\n            itemEditting : state.itemEditting\r\n      }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n      return {\r\n            onSaveTask : (task) => {\r\n                  dispatch(actions.saveTask(task))                  \r\n            },\r\n            onCloseForm : ()=>{\r\n                  dispatch(actions.closeForm());\r\n            }\r\n      }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskForm);\r\n\r\n"]},"metadata":{},"sourceType":"module"}