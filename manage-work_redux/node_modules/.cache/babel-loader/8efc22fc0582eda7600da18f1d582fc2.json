{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\ReactJS\\\\manage-work_redux\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\nimport * as actions from './actions/index';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateTask = () => {\n      this.props.onGenTask();\n    };\n\n    this.onDisplayForm = () => {// Them task\n      // if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n      //   this.setState({\n      //     isDisplayForm: true,\n      //     taskEditing: null\n      //   })\n      // } else {\n      //   this.setState({\n      //     isDisplayForm: !this.state.isDisplayForm,\n      //     taskEditing: null\n      //   })\n      // }\n    };\n\n    this.onToggleForm = () => {\n      this.props.onToggleForm();\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        },\n        isShowList: false\n      });\n    };\n\n    this.onSearch = nameSearch => {\n      this.setState({\n        nameSearch: nameSearch.toLowerCase(),\n        isShowList: false\n      });\n    };\n\n    this.onShowList = () => {\n      this.setState({\n        filter: {\n          name: \"\",\n          status: -1\n        },\n        isShowList: true\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sort: {\n          by: sortBy,\n          value: sortValue\n        }\n      });\n    };\n\n    this.state = {\n      //tasks: [], // id: unique, name, status\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      nameSearch: \"\",\n      isShowList: false,\n      sort: {\n        by: 'name',\n        // Mắc định sắp xếp theo tên\n        value: 1 // 1: tăng dần, -1: giảm dần\n\n      }\n    };\n  }\n\n  render() {\n    //let { tasks, sort } = this.state;\n    // Search\n    // if ( this.state.nameSearch !== \"\"){      \n    //   tasks = this.state.tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(this.state.nameSearch) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\n    //   })\n    // }\n    // // Show list after search\n    // if ( this.state.isShowList ){\n    //   tasks = this.state.tasks\n    // }\n    // Filter\n    // if (this.state.filter) {\n    //   if (this.state.filter.name) {\n    //     tasks = this.state.tasks.filter((task) => {\n    //       return task.name.toLowerCase().indexOf(this.state.filter.name) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\n    //     })\n    //   };\n    //   tasks = tasks.filter((task) => {\n    //     if (this.state.filter.status === - 1) {\n    //       return true // trả về mọi task được truyền vào\n    //     }\n    //     else {\n    //       return (task.status ? 1 : 0) === this.state.filter.status;\n    //     }\n    //   })\n    // }\n    // Sort\n    // if (sort.by === 'name'){\n    //   tasks.sort((a,b)=>{\n    //     if (a.name > b.name) {\n    //       return sort.value\n    //     }\n    //     else if (a.name < b.name) return -sort.value;\n    //     else return 0;\n    //   })\n    // } else {\n    //   if (sort.by === 'status'){\n    //     tasks.sort((a,b)=>{\n    //       if (a.status > b.status) {\n    //         return -sort.value\n    //       }\n    //       else if (a.status < b.status) return sort.value;\n    //       else return 0;\n    //     })\n    //   }\n    // }\n    var isDisplayForm = this.props.isDisplayForm;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(TaskForm, {\n      task: this.state.taskEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onToggleForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Th\\xEAm c\\xF4ng vi\\u1EC7c\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning ml-5\",\n      onClick: this.onGenerateTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Sinh c\\xF4ng vi\\u1EC7c\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onShowList: this.onShowList,\n      onSort: this.onSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(TaskList, {\n      isShowList: this.state.isShowList,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isDisplayForm: state.isDisplayForm\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onGenTask: () => {\n      dispatch(actions.genTask());\n    },\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:\\Users\\Administrator\\Desktop\\ReactJS\\manage-work_redux\\src\\App.js"],"names":["React","TaskForm","Control","TaskList","actions","connect","App","Component","constructor","props","onGenerateTask","onGenTask","onDisplayForm","onToggleForm","onShowForm","setState","isDisplayForm","onFilter","filterName","filterStatus","parseInt","filter","name","toLowerCase","status","isShowList","onSearch","nameSearch","onShowList","onSort","sortBy","sortValue","sort","by","value","state","taskEditing","render","mapStateToProps","mapDispatchToProps","dispatch","genTask","toggleForm"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport TaskForm from \"./components/TaskForm\";\r\nimport Control from \"./components/Control\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport * as actions from './actions/index'\r\nimport { connect } from 'react-redux';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //tasks: [], // id: unique, name, status\r\n      taskEditing: null,\r\n      filter: {\r\n        name: \"\",\r\n        status: -1\r\n      },\r\n      nameSearch : \"\",\r\n      isShowList : false,\r\n      sort : {\r\n        by : 'name', // Mắc định sắp xếp theo tên\r\n        value : 1 // 1: tăng dần, -1: giảm dần\r\n      }\r\n    }\r\n  }\r\n\r\n  onGenerateTask = () => {\r\n    this.props.onGenTask()\r\n  }\r\n\r\n  \r\n  onDisplayForm = () => { // Them task\r\n    // if (this.state.isDisplayForm && this.state.taskEditing !== null) {\r\n    //   this.setState({\r\n    //     isDisplayForm: true,\r\n    //     taskEditing: null\r\n    //   })\r\n    // } else {\r\n    //   this.setState({\r\n    //     isDisplayForm: !this.state.isDisplayForm,\r\n    //     taskEditing: null\r\n    //   })\r\n    // }\r\n    \r\n\r\n  }\r\n\r\n  onToggleForm = () =>{\r\n    this.props.onToggleForm();\r\n  }\r\n\r\n  onShowForm = () => {\r\n    this.setState({\r\n      isDisplayForm: true\r\n    })\r\n  }\r\n\r\n  onFilter = (filterName, filterStatus) => {\r\n    filterStatus = parseInt(filterStatus, 10);\r\n    this.setState({\r\n      filter: {\r\n        name: filterName.toLowerCase(),\r\n        status: filterStatus,        \r\n      },\r\n      isShowList : false\r\n    })\r\n    \r\n  }\r\n\r\n  onSearch = (nameSearch) => {    \r\n    this.setState({\r\n      nameSearch : nameSearch.toLowerCase(),\r\n      isShowList : false\r\n    })\r\n  }\r\n\r\n  onShowList = () => {\r\n    this.setState({\r\n      filter: {\r\n        name: \"\",\r\n        status: -1        \r\n      },\r\n      isShowList : true\r\n    })\r\n  }\r\n\r\n  onSort = (sortBy, sortValue) => {\r\n    this.setState({\r\n      sort : {\r\n        by : sortBy,\r\n        value : sortValue\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    //let { tasks, sort } = this.state;\r\n\r\n    // Search\r\n    // if ( this.state.nameSearch !== \"\"){      \r\n    //   tasks = this.state.tasks.filter((task) => {\r\n    //     return task.name.toLowerCase().indexOf(this.state.nameSearch) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\r\n    //   })\r\n    // }\r\n\r\n    // // Show list after search\r\n    // if ( this.state.isShowList ){\r\n    //   tasks = this.state.tasks\r\n    // }\r\n\r\n    // Filter\r\n    // if (this.state.filter) {\r\n    //   if (this.state.filter.name) {\r\n    //     tasks = this.state.tasks.filter((task) => {\r\n    //       return task.name.toLowerCase().indexOf(this.state.filter.name) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\r\n    //     })\r\n    //   };\r\n    //   tasks = tasks.filter((task) => {\r\n    //     if (this.state.filter.status === - 1) {\r\n    //       return true // trả về mọi task được truyền vào\r\n    //     }\r\n    //     else {\r\n    //       return (task.status ? 1 : 0) === this.state.filter.status;\r\n    //     }\r\n    //   })\r\n\r\n    // }\r\n\r\n    // Sort\r\n    // if (sort.by === 'name'){\r\n    //   tasks.sort((a,b)=>{\r\n    //     if (a.name > b.name) {\r\n    //       return sort.value\r\n    //     }\r\n    //     else if (a.name < b.name) return -sort.value;\r\n    //     else return 0;\r\n    //   })\r\n    // } else {\r\n    //   if (sort.by === 'status'){\r\n    //     tasks.sort((a,b)=>{\r\n    //       if (a.status > b.status) {\r\n    //         return -sort.value\r\n    //       }\r\n    //       else if (a.status < b.status) return sort.value;\r\n    //       else return 0;\r\n    //     })\r\n    //   }\r\n    // }\r\n\r\n    var {isDisplayForm} = this.props;\r\n\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <div className=\"text-center\" >\r\n          <h1>Quản lý công việc</h1>\r\n          <hr />\r\n        </div>\r\n\r\n        <div className=\"row\">\r\n\r\n          {/* left form */}\r\n          <div className={isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\r\n            <TaskForm task={this.state.taskEditing} />         \r\n          </div>\r\n\r\n          {/* right form */}\r\n          <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onToggleForm}>Thêm công việc</button>\r\n            <button type=\"button\" className=\"btn btn-warning ml-5\" onClick={this.onGenerateTask}>Sinh công việc</button>\r\n            <Control \r\n              onSearch = {this.onSearch} \r\n              onShowList = {this.onShowList}\r\n              onSort = {this.onSort}\r\n            />\r\n            <TaskList             \r\n              isShowList = {this.state.isShowList} \r\n              onFilter={this.onFilter}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isDisplayForm : state.isDisplayForm,\r\n  }\r\n  \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n  return {\r\n    onGenTask : () => {\r\n      dispatch(actions.genTask())\r\n    },\r\n    onToggleForm : ()=> {\r\n      dispatch(actions.toggleForm())\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n"]},"metadata":{},"sourceType":"module"}