{"ast":null,"code":"var _jsxFileName = \"/home/huy/Desktop/ReactJS/manage-work_redux/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\nimport * as actions from './actions/index';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onGenerateTask = () => {\n      this.props.onGenTask();\n    };\n\n    this.onDisplayForm = () => {\n      // Them task\n      if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n        this.setState({\n          isDisplayForm: true,\n          taskEditing: null\n        });\n      } else {\n        this.setState({\n          isDisplayForm: !this.state.isDisplayForm,\n          taskEditing: null\n        });\n      }\n    };\n\n    this.onCloseForm = () => {\n      this.setState({\n        isDisplayForm: false\n      });\n    };\n\n    this.onShowForm = () => {\n      this.setState({\n        isDisplayForm: true\n      });\n    };\n\n    this.onUpdateStatus = id => {\n      let index = this.findIndex(id);\n      let tasks = this.state.tasks;\n\n      if (index !== -1) {\n        tasks[index].status = !tasks[index].status;\n        this.setState({\n          tasks: tasks\n        });\n      }\n    };\n\n    this.findIndex = id => {\n      var tasks = this.state.tasks;\n      var result = -1;\n      tasks.forEach((task, index) => {\n        if (id === task.id) {\n          result = index;\n          return result;\n        }\n      });\n      return result;\n    };\n\n    this.onDelete = id => {\n      let index = this.findIndex(id);\n      let tasks = this.state.tasks;\n\n      if (index !== -1) {\n        tasks.splice(index, 1);\n        this.setState({\n          tasks: tasks\n        });\n      }\n    };\n\n    this.onUpdate = id => {\n      let index = this.findIndex(id);\n      let tasks = this.state.tasks;\n      let taskEditing = tasks[index];\n      this.setState({\n        taskEditing: taskEditing\n      });\n      this.onShowForm();\n    };\n\n    this.onFilter = (filterName, filterStatus) => {\n      filterStatus = parseInt(filterStatus, 10);\n      this.setState({\n        filter: {\n          name: filterName.toLowerCase(),\n          status: filterStatus\n        },\n        isShowList: false\n      });\n    };\n\n    this.onSearch = nameSearch => {\n      this.setState({\n        nameSearch: nameSearch.toLowerCase(),\n        isShowList: false\n      });\n    };\n\n    this.onShowList = () => {\n      this.setState({\n        filter: {\n          name: \"\",\n          status: -1\n        },\n        isShowList: true\n      });\n    };\n\n    this.onSort = (sortBy, sortValue) => {\n      this.setState({\n        sort: {\n          by: sortBy,\n          value: sortValue\n        }\n      });\n    };\n\n    this.state = {\n      //tasks: [], // id: unique, name, status\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      nameSearch: \"\",\n      isShowList: false,\n      sort: {\n        by: 'name',\n        // Mắc định sắp xếp theo tên\n        value: 1 // 1: tăng dần, -1: giảm dần\n\n      }\n    };\n  }\n\n  render() {\n    //let { tasks, sort } = this.state;\n    // Search\n    // if ( this.state.nameSearch !== \"\"){      \n    //   tasks = this.state.tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(this.state.nameSearch) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\n    //   })\n    // }\n    // // Show list after search\n    // if ( this.state.isShowList ){\n    //   tasks = this.state.tasks\n    // }\n    // Filter\n    // if (this.state.filter) {\n    //   if (this.state.filter.name) {\n    //     tasks = this.state.tasks.filter((task) => {\n    //       return task.name.toLowerCase().indexOf(this.state.filter.name) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\n    //     })\n    //   };\n    //   tasks = tasks.filter((task) => {\n    //     if (this.state.filter.status === - 1) {\n    //       return true // trả về mọi task được truyền vào\n    //     }\n    //     else {\n    //       return (task.status ? 1 : 0) === this.state.filter.status;\n    //     }\n    //   })\n    // }\n    // Sort\n    // if (sort.by === 'name'){\n    //   tasks.sort((a,b)=>{\n    //     if (a.name > b.name) {\n    //       return sort.value\n    //     }\n    //     else if (a.name < b.name) return -sort.value;\n    //     else return 0;\n    //   })\n    // } else {\n    //   if (sort.by === 'status'){\n    //     tasks.sort((a,b)=>{\n    //       if (a.status > b.status) {\n    //         return -sort.value\n    //       }\n    //       else if (a.status < b.status) return sort.value;\n    //       else return 0;\n    //     })\n    //   }\n    // }\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Qu\\u1EA3n l\\xFD c\\xF4ng vi\\u1EC7c\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, this.state.isDisplayForm ? React.createElement(TaskForm, {\n      onCloseForm: this.onCloseForm,\n      task: this.state.taskEditing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }) : \"\"), React.createElement(\"div\", {\n      className: this.state.isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary\",\n      onClick: this.onDisplayForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Th\\xEAm c\\xF4ng vi\\u1EC7c\"), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-warning ml-5\",\n      onClick: this.onGenerateTask,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Sinh Item\"), React.createElement(Control, {\n      onSearch: this.onSearch,\n      onShowList: this.onShowList,\n      onSort: this.onSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(TaskList //tasks={tasks}              \n    , {\n      isShowList: this.state.isShowList,\n      onUpdateStatus: this.onUpdateStatus,\n      onDelete: this.onDelete,\n      onUpdate: this.onUpdate,\n      onFilter: this.onFilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onGenTask: () => {\n      dispatch(actions.genTask());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/huy/Desktop/ReactJS/manage-work_redux/src/App.js"],"names":["React","TaskForm","Control","TaskList","actions","connect","App","Component","constructor","props","onGenerateTask","onGenTask","onDisplayForm","state","isDisplayForm","taskEditing","setState","onCloseForm","onShowForm","onUpdateStatus","id","index","findIndex","tasks","status","result","forEach","task","onDelete","splice","onUpdate","onFilter","filterName","filterStatus","parseInt","filter","name","toLowerCase","isShowList","onSearch","nameSearch","onShowList","onSort","sortBy","sortValue","sort","by","value","render","mapStateToProps","mapDispatchToProps","dispatch","genTask"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\nimport * as actions from './actions/index'\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //tasks: [], // id: unique, name, status\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1\n      },\n      nameSearch : \"\",\n      isShowList : false,\n      sort : {\n        by : 'name', // Mắc định sắp xếp theo tên\n        value : 1 // 1: tăng dần, -1: giảm dần\n      }\n    }\n  }\n\n  onGenerateTask = () => {\n    this.props.onGenTask()\n  }\n\n  \n  onDisplayForm = () => { // Them task\n    if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n      this.setState({\n        isDisplayForm: true,\n        taskEditing: null\n      })\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null\n      })\n    }\n\n  }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false\n    })\n  }\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true\n    })\n  }\n\n  onUpdateStatus = (id) => {\n    let index = this.findIndex(id);\n    let { tasks } = this.state;\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks\n      })\n    }\n\n  }\n\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (id === task.id) {\n        result = index\n        return result;\n      }\n    })\n    return result;\n  }\n\n  onDelete = (id) => {\n    let index = this.findIndex(id);\n    let { tasks } = this.state;\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks\n      })\n    }\n\n  }\n\n  onUpdate = (id) => {\n    let index = this.findIndex(id);\n    let { tasks } = this.state;\n    let taskEditing = tasks[index];\n    this.setState({\n      taskEditing: taskEditing,\n    })\n\n    this.onShowForm();\n  }\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,        \n      },\n      isShowList : false\n    })\n    \n  }\n\n  onSearch = (nameSearch) => {    \n    this.setState({\n      nameSearch : nameSearch.toLowerCase(),\n      isShowList : false\n    })\n  }\n\n  onShowList = () => {\n    this.setState({\n      filter: {\n        name: \"\",\n        status: -1        \n      },\n      isShowList : true\n    })\n  }\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sort : {\n        by : sortBy,\n        value : sortValue\n      }\n    })\n  }\n\n  render() {\n\n    //let { tasks, sort } = this.state;\n\n    \n\n    // Search\n    // if ( this.state.nameSearch !== \"\"){      \n    //   tasks = this.state.tasks.filter((task) => {\n    //     return task.name.toLowerCase().indexOf(this.state.nameSearch) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\n    //   })\n    // }\n\n    // // Show list after search\n    // if ( this.state.isShowList ){\n    //   tasks = this.state.tasks\n    // }\n\n    // Filter\n    // if (this.state.filter) {\n    //   if (this.state.filter.name) {\n    //     tasks = this.state.tasks.filter((task) => {\n    //       return task.name.toLowerCase().indexOf(this.state.filter.name) !== -1; // hàm indexOf sẽ trả về -1 nếu không tìm thấy\n    //     })\n    //   };\n    //   tasks = tasks.filter((task) => {\n    //     if (this.state.filter.status === - 1) {\n    //       return true // trả về mọi task được truyền vào\n    //     }\n    //     else {\n    //       return (task.status ? 1 : 0) === this.state.filter.status;\n    //     }\n    //   })\n\n    // }\n\n    // Sort\n    // if (sort.by === 'name'){\n    //   tasks.sort((a,b)=>{\n    //     if (a.name > b.name) {\n    //       return sort.value\n    //     }\n    //     else if (a.name < b.name) return -sort.value;\n    //     else return 0;\n    //   })\n    // } else {\n    //   if (sort.by === 'status'){\n    //     tasks.sort((a,b)=>{\n    //       if (a.status > b.status) {\n    //         return -sort.value\n    //       }\n    //       else if (a.status < b.status) return sort.value;\n    //       else return 0;\n    //     })\n    //   }\n    // }\n\n    return (\n\n      <div className=\"container\">\n        <div className=\"text-center\" >\n          <h1>Quản lý công việc</h1>\n          <hr />\n        </div>\n\n        <div className=\"row\">\n\n          {/* left form */}\n          <div className={this.state.isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"}>\n            {this.state.isDisplayForm ? <TaskForm onCloseForm={this.onCloseForm} task={this.state.taskEditing} /> : \"\"}\n          </div>\n\n          {/* right form */}\n          <div className={this.state.isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.onDisplayForm}>Thêm công việc</button>\n            <button type=\"button\" className=\"btn btn-warning ml-5\" onClick={this.onGenerateTask}>Sinh Item</button>\n            <Control \n              onSearch = {this.onSearch} \n              onShowList = {this.onShowList}\n              onSort = {this.onSort}\n            />\n            <TaskList\n              //tasks={tasks}              \n              isShowList = {this.state.isShowList}\n              onUpdateStatus={this.onUpdateStatus}\n              onDelete={this.onDelete}\n              onUpdate={this.onUpdate}\n              onFilter={this.onFilter}\n            />\n          </div>\n\n        </div>\n      </div>\n\n    )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onGenTask : () =>{\n      dispatch(actions.genTask())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}